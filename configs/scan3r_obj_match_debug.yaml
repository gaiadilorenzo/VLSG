# for Scan3R data
data :
  name            : Scan3R
  root_dir        : '' # to be read in code from env varia  
  rescan: False
  img:
    img_step: 5
    w: 960
    h: 540
  img_encoding:
    # image patch config
    resize_w: 1024 # resize image for backbone GCVit
    resize_h: 576
    img_rotate: True # rotate w,h for backbone GCVit
    patch_w: 16 # number of patchs in width
    patch_h: 9

# for sgaligner
sgaligner:
  label_file_name : labels.instances.annotated.v2.ply
  pred_subfix     : inseg.ply

  seed: 42
  num_workers : 4
  model_name    : 'sgaligner'
  modules       : ['point', 'gat', 'rel', 'attr']
  use_predicted : False
  registration  : False
  scan_type     : 'scan'

  preprocess :
    pc_resolutions      : [64, 128, 256, 512]
    subscenes_per_scene : 1
    filter_segment_size : 512
    min_obj_points      : 50
    anchor_type_name    : '' 

  model :
    rel_dim             : 9
    attr_dim            : 164
    alignment_thresh    : 0.4

  train :
    batch_size          : 2

  val :
    batch_size          : 4
    overlap_low         : 0.0
    overlap_high        : 0.0
    data_mode: orig

# our model
model_name    : 'ObjectPatchAligner'

# for 2D-3D object match
model:
  # GCVit backbone
  backbone: 
    # to be read in code from env varia, relative to VLSG_SPACE
    cfg_file: "./src/models/GCVit/configs/gcvit/cascade_mask_rcnn_gcvit_tiny_3x_coco.py"
    pretrained: "./checkpoint/GCVit/gcvit_1k_tiny.pth.tar"
    use_pretrained: True
    num_reduce: 1 # should be log2(resize_w/(32*patch_w))
    backbone_dim: 512 # fixed
  # patch feature encoder
  patch:
    hidden_dims: [512, 512, 512] # last is the out dim
    encoder_dim: 256
  # 3D obj embedding encoder
  obj:
    embedding_dim: 400 # fixed
    embedding_hidden_dims: [512, 512]
    encoder_dim: 256
  other:
    drop: 0.2

# implemetation
output_dir: "" # to be read in code from env varia
mode: "debug_few_scan"
# for training
train:
  batch_size: 1
  num_workers: 1
  freeze_backbone: True
  use_pretrained: False
  log_steps: 1
  optim:
    lr: 0.001
    lr_decay: 0.95
    lr_decay_steps: 1
    weight_decay: 0.000001
    max_epoch: 10000
    free_backbone_epoch: 10000 # freeze backbone until certain epochs
    grad_acc_steps: 1
# for validation
val:
  batch_size: 1
  num_workers: 1
  pretrained: "./"
other:
  use_resume: False
  # to be read in code from env varia, relative to VLSG_TRAINING_OUT_DIR
  resume: "./snapshots/epoch-50.pth.tar" 
# others
seed: 42
